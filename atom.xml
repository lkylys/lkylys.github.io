<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Web xiaobai</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-27T07:14:46.180Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>liyushu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ctf训练之逆向</title>
    <link href="http://yoursite.com/2018/07/27/ctf%E8%AE%AD%E7%BB%83%E4%B9%8B%E9%80%86%E5%90%91/"/>
    <id>http://yoursite.com/2018/07/27/ctf训练之逆向/</id>
    <published>2018-07-27T03:35:58.000Z</published>
    <updated>2018-07-27T07:14:46.180Z</updated>
    
    <content type="html"><![CDATA[<p>第一题：<br><a href="https://pan.baidu.com/s/1ZewvywceSIPI3KnGqbsM4g" target="_blank" rel="noopener">https://pan.baidu.com/s/1ZewvywceSIPI3KnGqbsM4g</a><br>这是我做的第一道逆向题目。<br>首先这个exe是有问题的，当我们在打开的时候发现会打不开的，我的打开时是这样的提示：<br><img src="https://i.imgur.com/vpjuzAO.png" alt=""><br>上面说让咨询软件发布者，我想我们没办法去找到谁发布的，所以我们就需要修改一下这个软件，再次我们就需要一个软件010editor</p><a id="more"></a><p>（SweetScape 010 Editor是一个全新的十六进位文件编辑器，它有别於传统的十六进位编辑器在於它可用’范本’来解析二进位文件, 从而让你读懂和编辑它. 它还可用来比较一切可视的二进位文件）<br>将这个exe拖进这个软件会出现01代码。首先我们找PE的位置，这个上面PE的位置是E8然后我们就找第E行也就是00E0h，从0开始数，数到8，我们会发现它是错误的，PE是00 45 50然而那个位置是45 50 00如图所示：<br><img src="https://i.imgur.com/sO8c4UK.png" alt=""><br>所以我们需要修改，修改之后为：<br><img src="https://i.imgur.com/THkyeRL.png" alt=""><br>修改完之后再次打开试一下，结果如图：(目前对01代码不够熟悉，详细讲解将会在学好之后继续上传）<br><img src="https://i.imgur.com/YnQ5vXw.png" alt=""><br>这就可以运行程序了。<br>看到这个提示框之后，我们先输入一下试一试，看看结果如何。<br><img src="https://i.imgur.com/9rndWOD.png" alt=""><br>出现的结果就是wrong，可以再次输入。<br>接着我们就可以逆向解决问题了，首先将该exe拖进IDA（32位）中。<br><img src="https://i.imgur.com/reVGwfl.png" alt=""><br>会看到乱七八糟的代码，我么先搜索一下吧，search，无论什么程序一般都会有主程序也就是mian函数，所以我们先搜索main函数，结果还真搜索到了。（如果没有的话我们可以根据输入错误的回答信息来比如wrong来搜索）点击main，使用fn+f5就可以进入我们的main函数了。<br><img src="https://i.imgur.com/98CxSCy.png" alt=""><br>进入之后就要我们分析函数，并且将这个函数逆向出来，并且将它解出来了。<br><strong>int64 main_0()<br>{<br>  int v0; // edx  </strong>int64 v1; // ST00_8<br>  int v3; // [esp+0h] [ebp-1A0h]<br>  const char <strong>v4; // [esp+4h] [ebp-19Ch]<br>  const char </strong>v5; // [esp+8h] [ebp-198h]<br>  int v6; // [esp+Ch] [ebp-194h]<br>  int i; // [esp+D4h] [ebp-CCh]<br>  int v8; // [esp+E0h] [ebp-C0h]<br>  int v9; // [esp+ECh] [ebp-B4h]<br>  int v10; // [esp+F0h] [ebp-B0h]<br>  int v11; // [esp+F4h] [ebp-ACh]<br>  int v12; // [esp+F8h] [ebp-A8h]<br>  int v13; // [esp+FCh] [ebp-A4h]<br>  int v14; // [esp+100h] [ebp-A0h]<br>  int v15; // [esp+104h] [ebp-9Ch]<br>  int v16; // [esp+108h] [ebp-98h]<br>  int v17; // [esp+10Ch] [ebp-94h]<br>  int v18; // [esp+110h] [ebp-90h]<br>  int v19; // [esp+114h] [ebp-8Ch]<br>  int v20; // [esp+118h] [ebp-88h]<br>  int v21; // [esp+11Ch] [ebp-84h]<br>  int v22; // [esp+120h] [ebp-80h]<br>  int v23; // [esp+124h] [ebp-7Ch]<br>  int v24; // [esp+128h] [ebp-78h]<br>  int v25; // [esp+12Ch] [ebp-74h]<br>  int v26; // [esp+130h] [ebp-70h]<br>  int v27; // [esp+134h] [ebp-6Ch]<br>  int v28; // [esp+138h] [ebp-68h]<br>  int v29; // [esp+13Ch] [ebp-64h]<br>  int v30; // [esp+140h] [ebp-60h]<br>  char v31; // [esp+14Fh] [ebp-51h]<br>  char v32[17]; // [esp+178h] [ebp-28h]<br>  char v33; // [esp+189h] [ebp-17h]<br>  char v34; // [esp+18Ah] [ebp-16h]<br>  char v35; // [esp+18Bh] [ebp-15h]<br>  char v36; // [esp+18Ch] [ebp-14h]<br>  char v37; // [esp+18Dh] [ebp-13h]</p><p>  v31 = 0;<br>  v9 = 1;<br>  v10 = 4;<br>  v11 = 14;<br>  v12 = 10;<br>  v13 = 5;<br>  v14 = 36;<br>  v15 = 23;<br>  v16 = 42;<br>  v17 = 13;<br>  v18 = 19;<br>  v19 = 28;<br>  v20 = 13;<br>  v21 = 27;<br>  v22 = 39;<br>  v23 = 48;<br>  v24 = 41;<br>  v25 = 42;<br>  v26 = 26;<br>  v27 = 20;<br>  v28 = 59;<br>  v29 = 4;<br>  v30 = 0;<br>  printf(“please enter flag:”);<br>  while ( 1 )<br>  {<br>    v6 = getch();<br>    v32[v31] = v6;<br>    if ( !(_BYTE)v6 || v32[v31] == 13 )<br>      break;<br>    if ( v32[v31] == 8 )<br>    {<br>      printf(“\b\b”);<br>      –v31;<br>    }<br>    else<br>    {<br>      printf(“%c”, v32[v31++]);<br>    }<br>  }<br>  v8 = 0;<br>  for ( i = 0; i &lt; 17; ++i )<br>  {<br>    if ( v32[i] != byte_415768[<em>(&amp;v9 + i)] )<br>      v8 = 1;<br>  }<br>  if ( v33 != 49 || v34 != 48 || v35 != 50 || v36 != 52 || v37 != 125 )<br>    v8 = 1;<br>  v32[v31] = 0;<br>  printf(“\r\n”);<br>  if ( v8 )<br>  {<br>    printf(“wrong\n”);<br>    main(v3, v4, v5);<br>  }<br>  else<br>  {<br>    printf(“success\n”);<br>  }<br>  system(“pause”);<br>  HIDWORD(v1) = v0;<br>  LODWORD(v1) = 0;<br>  return v1;<br>}<br>这个主函数的代码有100多行，首先看上面的，全是定义的一些类型。所以我们就可以大致看一下，继续看下面的。<br>接着就是while循环，这是一个无限循环。所以要让这个循环结束的条件就是break，恰好这个程序里面就有一个判断语句<br>if ( !(_BYTE)v6 || v32[v31] == 13 )如果这个语句成立就break，而且如果鼠标点到13，点一下“r“你会发现它会编程/n同样是跳出循环。<br>所以if循环肯定成立。<br>在while循环中，getch（）是我们输入的字符串，所以v6就是我们需要得到的值。<br>下面我们就可以看for循环了，for循环中的byte—415768我们已更改能够看出来它是一个数组或者字符串，所以我们把它点开看一下。<br><img src="https://i.imgur.com/PpAYKem.png" alt=""><br>果然是一个字符串，但是上面的73h一定不要忘记，它也是字符串的一部分，点一下人，将73h的格式转化一下，将会转化为s。<br><img src="https://i.imgur.com/s1xN1vD.png" alt=""><br>然后后看下面的如果成功就要让v8 = 0<br>所以for 循环里面的if语句若果不成立则v8就不会为一，所以我们可以让<br>v32[i] == byte_415768[</em>(&amp;v9 + i)]，所以我们只要求出来byte_415768[<em>(&amp;v9 + i)]我们就求出来了我们需要的答案。</em>(&amp;v9 + i)从这个里面我们知道v9所在地址后面的16位地址的值将会是我们需要的，且需要将放在一个数组里面。如何知道他们的的值呢。这个时候上面的信息就有用了。<br>所以我们可以下脚本了，下面就是我的python脚本<br>c =[1,4,14,10,5,36,23,42,13,19,28,13,27,39,48,41,42,26,20,59,4,0]<br>a = ‘sKfxEeft}f{gyrYgthtyhifsjei53UUrrr_t2cdsef66246087138\0087138’<br>for i in range(17):<br>    print(a[c[i]],end =’’)<br>得出来的结果为：KEY{e2s6ry3r5s8f6</p><p>你会发现这个钥匙少了一部分。那么就继续看下面的部分，下面又是一个if判断语句，如果你是一个逆向高手，我想你会发现这些东西其实就是要是的后面部分。按r键转化为assic表就会得到：<br><img src="https://i.imgur.com/yNNLTvw.png" alt=""><br>加在钥匙后面就是KEY{e2s6ry3r5s8f61024}。这就是一个完整的钥匙了下面我们输上去试一试。<br><img src="https://i.imgur.com/8ESlrq7.png" alt=""><br>事实证明答案是对的！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一题：&lt;br&gt;&lt;a href=&quot;https://pan.baidu.com/s/1ZewvywceSIPI3KnGqbsM4g&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pan.baidu.com/s/1ZewvywceSIPI3KnGqbsM4g&lt;/a&gt;&lt;br&gt;这是我做的第一道逆向题目。&lt;br&gt;首先这个exe是有问题的，当我们在打开的时候发现会打不开的，我的打开时是这样的提示：&lt;br&gt;&lt;img src=&quot;https://i.imgur.com/vpjuzAO.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;上面说让咨询软件发布者，我想我们没办法去找到谁发布的，所以我们就需要修改一下这个软件，再次我们就需要一个软件010editor&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/07/27/ctf%E4%B9%8B%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/27/ctf之文件上传问题/</id>
    <published>2018-07-27T03:21:09.039Z</published>
    <updated>2018-07-27T03:21:09.043Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF训练题总结1"><a href="#CTF训练题总结1" class="headerlink" title="CTF训练题总结1"></a>CTF训练题总结1</h1><p>1，上传文件格式</p><p>在ctf训练体题中会出现一些文件上传的的题目，它的题型也不唯一。</p><a id="more"></a><p>第一种（直接查看源代码）：<br>这种简单的题目，在题的网页上面可以直接按ctrl + f12<br>查看源代码，将文件的格式修改为所需要上传的格式就好。（现在网站打不开，打开了我会上传图片）</p><p>第二种（需要绕过验证）：<br>这种题目顾名思义就是需要绕过题上所给的限制，比如题上让你提交.php格式的文件，但是它又加了个限定，只允许jpg的格式上传成功，例如：<br><img src="https://i.imgur.com/6dy8RsU.png" alt=""><br>需要上传文件，提上要求的是上传php格式的文件，首先我们上传一个php文件试一试。结果如下：<br><img src="https://i.imgur.com/bKculhD.png" alt=""><br>我们再试一下其它的文件，我尝试了一下txt文件，和上面的结果一样，我们再试一下jpg文件：<br><img src="https://i.imgur.com/MybYCUd.png" alt=""><br>发现可以上传成功，也就是说它不限制jpg格式的文件上传，所以，我们就要想办法，让我们传送的文件欺骗它的检测，就是我们传送php格式，而它检测的却是jpg文件，现在我们开始抓包。<br><img src="https://i.imgur.com/7b3DKTd.png" alt=""><br>这是一个php文件上传的抓包结果，我们可以看到我们上传的是php类型，他检测的content-type也是php类型，所以我们提交不成功，那么我们将content-type修改为jpg格式，让它检测出我们提交的是jpg格式那么我们就可以提交了。关于content-type这些知识，大家可以上网搜索一下。<br>这一道题提交jpg格式显示还是不对，但使用jepg格式是对的<br><img src="https://i.imgur.com/phlyDTs.png" alt=""><br>或许是jpg和php都是用appalication所致吧，这个后期问清楚之后我会上传。修改之后就是<br><img src="https://i.imgur.com/sGaEMHF.png" alt=""><br><img src="https://i.imgur.com/FRoVY2x.png" alt=""><br>这就成功了！</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CTF训练题总结1&quot;&gt;&lt;a href=&quot;#CTF训练题总结1&quot; class=&quot;headerlink&quot; title=&quot;CTF训练题总结1&quot;&gt;&lt;/a&gt;CTF训练题总结1&lt;/h1&gt;&lt;p&gt;1，上传文件格式&lt;/p&gt;
&lt;p&gt;在ctf训练体题中会出现一些文件上传的的题目，它的题型也不唯一。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/07/26/github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/07/26/github搭建博客教程/</id>
    <published>2018-07-26T12:50:13.916Z</published>
    <updated>2018-07-26T12:50:13.920Z</updated>
    
    <content type="html"><![CDATA[<p>##github搭建博客指南##</p><p>注意将自己的博客名格式github的用户名.github.io<br>如果之前在GitHub上设置过密钥，需要检验密钥是否可以使用，最好重新添加一个密钥。<br>这里面没有主题设置，过段时间会更新主题配置。</p><p>第一步：安装Node.js并配置好Node.js环境，成功界面为：<br><img src="https://i.imgur.com/8GW2yQB.png" alt=""></p><a id="more"></a><p>第二步：</p><p>下载git速度会很慢，我将我的百度网盘连接放在上面。<a href="https://pan.baidu.com/s/1pj23Fwp2SSHvO8Cqt16tUA" target="_blank" rel="noopener">https://pan.baidu.com/s/1pj23Fwp2SSHvO8Cqt16tUA</a><br>安装git并配置其环境，安装成功的就是再桌面右击鼠标出现下下面界面：<br><img src="https://i.imgur.com/n6VHVx0.png" alt=""></p><p>注意：在使用GIT时，我们一般使用右击鼠标，使用GIT BASH HERE。但是如果要使用命令提示符里面调用GIT，就需要配置电脑环境变量PATH，安装的时候选择USE GIT FROM THE WINDOWS COMMAND PROMPT也可以。同样的配置成功的界面如下：<br><img src="https://i.imgur.com/QmzXygh.png" alt=""></p><p>第三步：</p><p>使用github搭建博客，就必须要有github账户，这个很简单，只需要在github官网上注册就好了。<br>注意：创建项目虽然简单，但是有个格式需要遵守（账户名.github.io),否则的话后期会出现很多事情，很麻烦。并且需要勾选Initialize this repository with a README。图片如下：<br><img src="https://i.imgur.com/rq95QjV.png" alt=""><br>建好项目之后，在右编有一个settings按钮，点击它，拉到github pages的位置，你会看到有个网址，你能够通过它发现你的项目已经被部署到网上了，并且能够通过外网访问它。效果图：<br><img src="https://i.imgur.com/Rv7Gxoz.png" alt=""></p><p>第四步：</p><p>安装hexo，在一个合适的位置创建一个空文件夹，我在e盘先创建了一个blog的空文件夹，e盘较大，使用blog更方便查找。创建完之后我们可以通过命令提示符进入到该文件夹里面。<br><img src="https://i.imgur.com/DMzWcFI.png" alt=""></p><p>然后输入：npm install hexo -g，开始安装（下面的是成功界面，我的已经安装过了，下面是在网上找的图片）<br><img src="https://i.imgur.com/Pw3RrNN.png" alt=""><br>输入hexo -v，检查是否安装成功<br><img src="https://i.imgur.com/THvMRmp.png" alt=""><br>输入hexo init ，初始化（需要等待一段时间)<br><img src="https://i.imgur.com/l67ytUA.png" alt=""><br>当后面出现start bloging with hexo时，就是初始化结束，下面就可以安装组件了。<br>输入npm install，安装组件。<br><img src="https://i.imgur.com/zxsjFq5.png" alt=""><br>输入hexo g，开始体验hexo<br><img src="https://i.imgur.com/YDuGV8o.png" alt=""><br>只要没有红色出现就是没有出错误。<br>输入hexo s开启服务器，可以开始网址。（这个出现的东西可能和你们的不一样，但是最后一行相同就行）<br><img src="https://i.imgur.com/nLYQpNJ.png" alt=""><br>在网页上输入得到的网址，如果出现下情况就是完成了。<br><img src="https://i.imgur.com/FV2FLaU.png" alt=""><br>如果页面无法跳转，可能是端口被占用了。这个时候可以ctrl+c，输入hexo server -p 5000换一个端口使用。</p><p>第五步：</p><p>将hexo与github page连接起来，设置git的user name<br>和email。（用户名和邮箱使用创建github的名字和邮箱）<br><img src="https://i.imgur.com/bVkAs0G.png" alt=""><br><img src="https://i.imgur.com/PGGMItP.png" alt=""><br>输入的时候改一下username和email就好<br>输入cd~/.ssh检查是否有.ssh文件夹<br><img src="https://i.imgur.com/oKGNVoL.png" alt=""><br>输入ls列出文件内容<br><img src="https://i.imgur.com/Kj8pYev.png" alt=""><br>输入ssh-keygen -t rsa -C”邮箱号”,连续三个回车生成密钥，会得到两个文件：id_rsa和id_rsa.pub(默认在C:\Users\Administrator.ssh的位置）。<br><img src="https://i.imgur.com/hIeqn4o.png" alt=""><br>输入eval “$(ssh-agent -s)”，添加密钥到ssh-agent<br><img src="https://i.imgur.com/SGq3W9n.png" alt=""><br>再输入ssh-add ~/.ssh/id_rsa，添加生成的SSH key到ssh-agent<br><img src="https://i.imgur.com/T0Xhja6.png" alt=""><br>然后登陆github，点击头像下的settings，添加ssh。<br><img src="https://i.imgur.com/12MHEW7.png" alt=""><br><img src="https://i.imgur.com/clTM1fh.png" alt=""><br><img src="https://i.imgur.com/E54Z8I9.png" alt=""><br>我的已经输入过了下面是没有输入过的。<br><img src="https://i.imgur.com/Ch85Ig9.png" alt=""><br>输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>,测试添加ssh是否成功。成功了就可以在hi后面看到你的用户名了。<br><img src="https://i.imgur.com/k5KkePQ.png" alt=""><br>注意：如果ssh—key配置失败需要进行如下步骤<br>首先清除所有数据<br>key-pair<br>ssh-add -D<br>rm -r~/.ssh<br>删除在github中的public-key<br>chongxinshengc密钥<br>ssh-keygen -t rsa -C”邮箱”<br>接下来正常操作<br>在github上添加公钥public-key:<br>1、首先在你的终端运行 xclip -sel c ~/.ssh/id_rsa.pub将公钥内容复制到剪切板<br>2、在github上添加公钥时，直接复制即可<br>3、保存</p><p>测试：<br>在终端 ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a><br>第六步：<br>配置deployment，在blog（blog是我前面创建的文件夹）文件夹中找到—config.yml，修改repo值（在末尾）<br><img src="https://i.imgur.com/5c7rhhp.png" alt=""><br>repo值是你在github项目里的ssh（右下角）<br><img src="https://i.imgur.com/kWCaBHe.png" alt=""></p><p>第七步：</p><p>新建一篇博客，在cmd命令提示符里面进入到自己的bolg文件输入hexo new post” 博客名”<br><img src="https://i.imgur.com/1MAqXbk.png" alt=""><br>创建完成后在文件夹—posts目录下将会看到已经创建的文件<br><img src="https://i.imgur.com/NIbfYBs.png" alt=""><br>在生成及部署之前，需要安装一个扩展：npm install hexo-deployer-git –save<br><img src="https://i.imgur.com/3FmbUR6.png" alt=""><br>然后就是编辑好文章，就可以使用命令： hexo d -g生成级部署了。<br><img src="https://i.imgur.com/GJegsNR.png" alt=""><br>部署成功后就可以访问你的博客了<br>http://用户名.github.io<br>同样的也可以看到生成的文章。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##github搭建博客指南##&lt;/p&gt;
&lt;p&gt;注意将自己的博客名格式github的用户名.github.io&lt;br&gt;如果之前在GitHub上设置过密钥，需要检验密钥是否可以使用，最好重新添加一个密钥。&lt;br&gt;这里面没有主题设置，过段时间会更新主题配置。&lt;/p&gt;
&lt;p&gt;第一步：安装Node.js并配置好Node.js环境，成功界面为：&lt;br&gt;&lt;img src=&quot;https://i.imgur.com/8GW2yQB.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/07/21/ctf%E8%AE%AD%E7%BB%83%E9%A2%98%E6%80%BB%E7%BB%93%E5%8F%8A%E9%A2%98%E5%9E%8B/"/>
    <id>http://yoursite.com/2018/07/21/ctf训练题总结及题型/</id>
    <published>2018-07-21T06:59:54.093Z</published>
    <updated>2018-07-26T08:17:18.303Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TITLE：-WEB知识学习"><a href="#TITLE：-WEB知识学习" class="headerlink" title="TITLE： WEB知识学习"></a>TITLE： WEB知识学习</h1><p> 2018年7月15日<br>  今天是训练营开课的第一天，在今天第一学会了安装VMware，并在里面创建虚拟机，在虚拟机中掌握了关闭虚拟机的基础代码。Shut -h now是立马关机，Shutdown -h 20:00意思是在20：00关机。Shutdown -h +10，意思是十分钟后关闭虚拟机。Shutdown -r now 意思是立马重启虚拟机。同样的now改为+10，意思是10分钟后重启虚拟机。reboot也是重启虚拟机，和Shutdown -r now 作用相同。并且会操作用户的添加和删除，创建文件等（目前添加删除用户，创建删除文件操作还未记住）</p><a id="more"></a><p>  第二是学会了简单的用namp做一些简单的题，知道如何检索信息，在命令提示符中输入namp +要检查的东西。</p><p>  第三是安装上了Burpsuite，安装Java环境时jdk，jir不能安装在同一个地方。并且需要改变电脑上的环境配置。（java环境配置<a href="https://jingyan.baidu.com/article/6dad5075d1dc40a123e36ea3.html）" target="_blank" rel="noopener">https://jingyan.baidu.com/article/6dad5075d1dc40a123e36ea3.html）</a></p><p>2018年7月17，培训第二天</p><p>今天首先开始学学习安装phpStudy和搭建DVWA。</p><p>phpStudy我实在网站<a href="http://phpstudy.php.cn/上面下载到电脑上并且安装。phpStudy是集成了Apache和MySql的集成环境，下载好安装phpStudy" target="_blank" rel="noopener">http://phpstudy.php.cn/上面下载到电脑上并且安装。phpStudy是集成了Apache和MySql的集成环境，下载好安装phpStudy</a>, 运行时显示缺少VC9运行库，因此就要下载一个VC运行库，VC9运行库分32位和64位，我的是64位的，就在网站（<a href="http://www.microsoft.com/zh-CN/download/details.aspx?id=15336）。安装完成之后运行127.0.0.1看是否可以出现界面" target="_blank" rel="noopener">http://www.microsoft.com/zh-CN/download/details.aspx?id=15336）。安装完成之后运行127.0.0.1看是否可以出现界面</a> 下载DVWA <a href="http://www.dvwa.co.uk/" target="_blank" rel="noopener">http://www.dvwa.co.uk/</a> 下载后解压，放到phpStudy的WWW目录之下。然后配置一下相关文件首先最好先配置一下phpStudy的数据库密码 修改后将DVWA/confing下的config.inc.php.dist修改为 config.inc.php,找到其中的把原来的db_password改为刚设置的数据库密码。</p><p>修改成功后访问127.0.0.1/DVWA 然后创建好了若没有问题便会自动跳转至登陆界面 账号/密码 admin/password。</p><p>然后就完成了安装phpStudy和搭建DVWA。后面学了一些用法现在不怎么会使用，看不太懂。</p><p>第二个就是sqlmap。</p><p>下载sqlmap需要先下载python2版本，由于我电脑上原本就有python2版本，不需要下载。其次就是下载sqlmap压缩包，下载完压缩包之后需要解压，并把解压的文件放在python的安装目录下。最麻烦的就是创建cmd快捷方式。（<a href="https://jingyan.baidu.com/article/60ccbceb64cc2064cbb19748.html）这个网站上有具体的操作步骤。电脑上如果有python2和python3两个版本需要把默认设置改为python，在控制面板里面高级系统设置的环境变量里面修改。path路径里面修改注意要将2的版本放在3的位置处。" target="_blank" rel="noopener">https://jingyan.baidu.com/article/60ccbceb64cc2064cbb19748.html）这个网站上有具体的操作步骤。电脑上如果有python2和python3两个版本需要把默认设置改为python，在控制面板里面高级系统设置的环境变量里面修改。path路径里面修改注意要将2的版本放在3的位置处。</a></p><p>第三就是在网络攻防的做题网站上又做了两道题，还是很懵，很多问题不知道如何去改，还有就是用burpsuite抓包不是太熟练，有的时候抓不到包。需要多刷新几次才能抓到，有的甚至需要重新打开burpsuite才能抓到包。</p><p><a href="http://ctf.dropsec.xyz:8080/challenge" target="_blank" rel="noopener">http://ctf.dropsec.xyz:8080/challenge</a></p><p>第一道题：签到题</p><p>这道题很简单，直接在题目中查看源码就能够找到flag</p><p>第二道题：没有人的密码会这么简单</p><p>这是一道爆破题，需要使用burpsuite去爆破，我在网上学习如何使用burpsuite去爆破。</p><p>首先需要先抓包，抓包时需要输入自己随意填写的密码之后抓包，如果抓取登录的请求包后并且用户名和密码都是明文的话，便可进行爆破。接下来，爆破操作步骤如下：</p><p>首先，点击Action —&gt; Sent to Intruder将抓到的包发送到 Intruder。</p><p>其次，点击Intruder —&gt; Positions 将账号，单击Clear ，然后分别 选中admin —&gt; Add，选中123456 —&gt; Add，然后选择爆破模式：Cluster bomb。</p><p>接着在弹出的对话框中，添加用户名字典和密码字典，然后点击 Payloads，然后添加两个参数的类型，以我的例题为例，我的账号为admin，密码为从1000到9999这9000个数字中的一个，所以我想要两个txt文件一个只是admin，另需要从1000到9999所有的数字。这两个参数类型就是这两个txt文件。</p><p>最后就是爆破，点击上方的intruder选择Start attack爆破，检索结果中length与其他不一样就是我们需要的密码。</p><p>第三道题：我说的是真的</p><p>这道题在火狐网站上不需要任何工具就能做，只需要查看源代码就好，但是在一些其他网站上面需要在burp上面抓包来做。做题方法，首先就是抓包，抓到包以后发送到repeater里面，然后在里面go两次就可以了。</p><p>第四道题：你会改后缀吗？</p><p>这道题是一个改后缀的题，但是也不仅仅是改后缀就能够找到答案的，打开题目是一个图片，我们将图片下载下来，然后把图片的格式改为txt格式，然后用ctrl+f快速查找nctf即可。这样就很简单的找到答案了。</p><p>第五道题:找找找</p><p>这代替和我说的是真的做法完全一模一样，在这就不说了。</p><p>第六道题：本机登陆</p><p>这道题不难，但是一些东西不知道，不知道如何去做，其实也很简单就是先抓包，然后就是将</p><p>X-Forwarded-For: 127.0.0.1放在抓到的包里面，然后把isadmin=0改为等于1即可。注意：这些步骤一定要迅速，时间过长将没办法找到答案。</p><p>第一题：/XOO<br>if (isset ($_GET[‘nctf’])) {<br>        if (@ereg (“^[1-9]+$”, $_GET[‘nctf’]) === FALSE)<br>            echo ‘必须输入数字才行’;<br>        else if (strpos ($_GET[‘nctf’], ‘#biubiubiu’) !== FALSE)<br>            die(‘Flag: ‘.$flag);<br>        else<br>            echo ‘骚年，继续努力吧啊~’;<br>    }<br>题上要求提交的nctf的值符合正则匹配(一个或多个数字)并且能被strpos找到#biubiubiu ，根据提示查到资料ereg会把null视为字符串的结束，从而被%00截断，而strpos则可以越过%00，所以提交nctf=1%00%23biubiubiu即可。</p><p>第二题：web4<br>这一道题是解码题，而且是使用url解码，一般情况下，带%号的码都需要使用url解码。这道题中有一个函数是eval函数。<br>eval函数是强大的数码转换引擎，字符串经eval转换侯得到一个javascript对象。<br>举个例子：<br>var a = eval（“5”);等效于var = 5<br>var a = eval （“’5‘”）等效于var = ’5‘；<br> var obj = eval(“({name:’cat’,color:’black’})”);等效于 var obj = {name:’cat’,color:’black’};<br>eval(“alert(‘hello world!’);”);等效于 alert(‘hello world!’);<br>（<a href="https://blog.csdn.net/ruoshui09172104/article/details/51783700）介绍eval的用法" target="_blank" rel="noopener">https://blog.csdn.net/ruoshui09172104/article/details/51783700）介绍eval的用法</a><br>unescape后面是代表需要解密的东西<br>unescape(‘%35%34%61%61%32’ + p2));需要将p2的内容前面加上%35%34%61%61%32一块解密。<br>这道题的两个解密放在一块会出现所要的东西。</p><p>第三道题：web5<br>题上给的提示是JSPFUCK??????答案格式CTF{**} 字母大写要求转化为ctf格式<br>在提示中我们了解的就是JSP是一种格式，答案是ctf格式。<br>在查看源代码里面可以看出来，有很长的一行代码，那些代码就是要被解密，这次解密不是需要base64，也不用url解密，需要用浏览器上的web解密。在web控制台上面可以解密编码。<br>解密之后就是ctf格式了，将解密的东西提交就是题的答案了，注意要大写。</p><p>第四道题：头有点大</p><p>Please make sure you have installed .net framework 9.9!<br>Make sure you are in the region of England and browsing this site with Internet Explorer<br>这两句话告诉我了我们需要改三处地方，第一个是安装.net9.9框架  第二个是保证在英国地区 第三个是用ie浏览器<br>第一个和第三个我们可以在User-Agent后加上(MSIE 9.0;.NET CLR 9.9)来实现<br>最后一个在英国我们把语言改成en-gb即可</p><p>如何在hexo博客上写博客，将文件放在博客站点文件下的source_posts目录下<br>首先输入hexo generate，生成静态页面<br>在输入hexo  server，回车，到localhost：4000预览博客效果，<br>最后输入：hexo deploy 回车同步到gihub上就行了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;TITLE：-WEB知识学习&quot;&gt;&lt;a href=&quot;#TITLE：-WEB知识学习&quot; class=&quot;headerlink&quot; title=&quot;TITLE： WEB知识学习&quot;&gt;&lt;/a&gt;TITLE： WEB知识学习&lt;/h1&gt;&lt;p&gt; 2018年7月15日&lt;br&gt;  今天是训练营开课的第一天，在今天第一学会了安装VMware，并在里面创建虚拟机，在虚拟机中掌握了关闭虚拟机的基础代码。Shut -h now是立马关机，Shutdown -h 20:00意思是在20：00关机。Shutdown -h +10，意思是十分钟后关闭虚拟机。Shutdown -r now 意思是立马重启虚拟机。同样的now改为+10，意思是10分钟后重启虚拟机。reboot也是重启虚拟机，和Shutdown -r now 作用相同。并且会操作用户的添加和删除，创建文件等（目前添加删除用户，创建删除文件操作还未记住）&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
